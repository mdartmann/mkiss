#!/bin/sh -uxe

# Do not run fixinclude
sed -i "s|\./fixinc\.sh|-c true|" gcc/gcc/Makefile.in

# Use lib not lib64 by default
sed -i '/m64=/s/lib64/lib/' gcc/gcc/config/i386/t-linux64

unset CC
unset CXX
unset CPP
unset LD

mkdir -p gcc-build
mkdir -p libgccjit-build

export confflags=(
    --prefix=/usr 
    --libdir=/usr/lib
    --libexecdir=/usr/lib
    --mandir=/usr/share/man 
    --infodir=/usr/share/info 
    --with-bugurl=https://github.com/mdartmann/mkiss/issues 
    --with-linker-hash-style=gnu 
    --with-system-zlib 
    --enable-__cxa-atexit 
    --enable-cet=auto 
    --enable-ehcking=release 
    --enable-clocale=gnu 
    --enable-default-pie 
    --enable-default-ssp 
    --enable-gnu-indirect-function 
    --enable-gnu-unique-object 
    --enable-linker-build-id 
    --enable-lto 
    --enable-multi-arch 
    --enable-plugin
    --enable-shared 
    --enable-threads=posix 
    --disable-libssp 
    --disable-libstdcxx-pch 
    --disable-werror 
    --with-build-config=bootstrap-lto 
    --enable-link-serialization=1 
)

cd gcc-build

export CFLAGS=${CFLAGS/-Werror=format-security}
export CXXFLAGS=${CXXFLAGS/-Werror=format-security}

../gcc/configure \
    --enable-languages=c,c++,fortran,go,lto,objc,obj-c++ \
    --enable-bootstrap \
    ${confflags[@]}

make -O \
    STAGE1_CFLAGS="-O2" \
    BOOT_CFLAGS="$CFLAGS" \
    BOOT_LDFLAGS="$LDFLAGS" \
    LDFLAGS_FOR_TARGETS="$LDFLAGS" \
    bootstrap

make -O
make -O -C $CHOST/libstdc++-v3/doc doc-man-doxygen

# build libgccjit separately for better performance
cd ../libgccjit-build

../gcc/configure \
    --enable-languages=jit \
    --disable-bootstrap \
    --enable-host-shared

make -O \
    STAGE1_CFLAGS="-O2" \
    BOOT_CFLAGS="$CFLAGS" \
    BOOT_LDFLAGS="$LDFLAGS" \
    LDFLAGS_FOR_TARGETS="$LDFLAGS" \
    all-gcc

cp -a gcc/libgccjit.so* ../gcc-build/gcc/

cd ../gcc-build
make DESTDIR="$1" install
make -C $CHOST/libstdc++-v3/doc doc-install-man

# Add LTO
install -vdm755 "$1/usr/lib/bfd/plugins"
ln -sfv ../../gcc/$(cc -dumpmachine)/$2/liblto_plugin.so \
	"$1/usr/lib/bfd/plugins/liblto_plugins.so"

ln -s gcc "$1/usr/bin/cc"
install -Dm755 ../c99 "$1/usr/bin/c99"

python -m compileall "$1"/usr/share/gcc-$2 
python -O -m compileall "$1"/usr/share/gcc-$2 
