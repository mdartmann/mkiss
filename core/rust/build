#!/bin/sh -uxe
export DESTDIR="$1"

# Move credential helpers from libexec to lib
patch -d src/tools/cargo -Np1 < 0001-cargo-Change-libexec-dir.patch
patch -Np1 -i 0001-bootstrap-Change-libexec-dir.patch

# Use pc-linux-gnu instead of unknown-linux-gnu targets
patch -Np1 -i 0002-compiler-Change-LLVM-targets.patch

# Use LLVMs wasm-ld
patch -Np1 -i 0003-compiler-Use-wasm-ld-for-wasm-targets.patch

cat > config.toml << EOF
changelog-seen = 2
profile = "user"

[llvm]
link-shared = true

[build]
target = [
  "x86_64-unknown-linux-gnu",
]
cargo = "$(which cargo)"
rustc = "$(which rustc)"
rustfmt = "$(which rustfmt)"
locked-deps = true
vendor = true
tools = ["cargo", "rls", "clippy", "rustfmt", "analysis", "src", "rust-demangler"]
sanitizers = true
profiler = true

# Generating docs fails with the wasm32-* targets
docs = false

[install]
prefix = "/usr"

[rust]
debuginfo-level-std = 2
channel = "stable"
description = "MKiss Rust ${2}-1"
rpath = false
backtrace-on-ice = true
remap-debuginfo = true
jemalloc = true

# LLVM crashes when passing an object through ThinLTO twice.  This is triggered
# when using rust code in cross-language LTO if libstd was built using ThinLTO.
# http://blog.llvm.org/2019/09/closing-gap-cross-language-lto-between.html
# https://github.com/rust-lang/rust/issues/54872
codegen-units-std = 1

[dist]
compression-formats = ["gz"]

[target.x86_64-unknown-linux-gnu]
llvm-config = "/usr/bin/llvm-config"
EOF

export RUST_BACKTRACE=1

python3 x.py install $MAKEFLAGS

rm "$1"/usr/lib/rustlib/{components,install.log,rust-installer-version,uninstall.sh}
rm "$1"/usr/lib/rustlib/manifest-*

mkdir -p "$1"/usr/share/bash-completion
mv "$1"/etc/bash_completion.d "$1"/usr/share/bash-completion/completions
